{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>date</th>\n",
       "      <th>city</th>\n",
       "      <th>lat</th>\n",
       "      <th>long</th>\n",
       "      <th>pop</th>\n",
       "      <th>shop</th>\n",
       "      <th>brand</th>\n",
       "      <th>container</th>\n",
       "      <th>capacity</th>\n",
       "      <th>price</th>\n",
       "      <th>quantity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5940</td>\n",
       "      <td>1931-01-18</td>\n",
       "      <td>Athens</td>\n",
       "      <td>37.97945</td>\n",
       "      <td>23.71622</td>\n",
       "      <td>664046</td>\n",
       "      <td>shop_1</td>\n",
       "      <td>kinder-cola</td>\n",
       "      <td>plastic</td>\n",
       "      <td>1.5lt</td>\n",
       "      <td>3.10</td>\n",
       "      <td>7056</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5941</td>\n",
       "      <td>1931-01-18</td>\n",
       "      <td>Athens</td>\n",
       "      <td>37.97945</td>\n",
       "      <td>23.71622</td>\n",
       "      <td>664046</td>\n",
       "      <td>shop_1</td>\n",
       "      <td>kinder-cola</td>\n",
       "      <td>can</td>\n",
       "      <td>330ml</td>\n",
       "      <td>0.85</td>\n",
       "      <td>12490</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5942</td>\n",
       "      <td>1931-01-18</td>\n",
       "      <td>Athens</td>\n",
       "      <td>37.97945</td>\n",
       "      <td>23.71622</td>\n",
       "      <td>664046</td>\n",
       "      <td>shop_1</td>\n",
       "      <td>adult-cola</td>\n",
       "      <td>glass</td>\n",
       "      <td>500ml</td>\n",
       "      <td>0.83</td>\n",
       "      <td>26640</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>5943</td>\n",
       "      <td>1931-01-18</td>\n",
       "      <td>Athens</td>\n",
       "      <td>37.97945</td>\n",
       "      <td>23.71622</td>\n",
       "      <td>664046</td>\n",
       "      <td>shop_1</td>\n",
       "      <td>orange-power</td>\n",
       "      <td>glass</td>\n",
       "      <td>500ml</td>\n",
       "      <td>0.54</td>\n",
       "      <td>41892</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5944</td>\n",
       "      <td>1931-01-18</td>\n",
       "      <td>Athens</td>\n",
       "      <td>37.97945</td>\n",
       "      <td>23.71622</td>\n",
       "      <td>664046</td>\n",
       "      <td>shop_1</td>\n",
       "      <td>orange-power</td>\n",
       "      <td>plastic</td>\n",
       "      <td>1.5lt</td>\n",
       "      <td>0.83</td>\n",
       "      <td>22923</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>985</th>\n",
       "      <td>6925</td>\n",
       "      <td>1931-12-18</td>\n",
       "      <td>Athens</td>\n",
       "      <td>37.97945</td>\n",
       "      <td>23.71622</td>\n",
       "      <td>664046</td>\n",
       "      <td>shop_1</td>\n",
       "      <td>kinder-cola</td>\n",
       "      <td>plastic</td>\n",
       "      <td>1.5lt</td>\n",
       "      <td>2.52</td>\n",
       "      <td>13760</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>986</th>\n",
       "      <td>6926</td>\n",
       "      <td>1931-12-18</td>\n",
       "      <td>Athens</td>\n",
       "      <td>37.97945</td>\n",
       "      <td>23.71622</td>\n",
       "      <td>664046</td>\n",
       "      <td>shop_1</td>\n",
       "      <td>orange-power</td>\n",
       "      <td>plastic</td>\n",
       "      <td>1.5lt</td>\n",
       "      <td>2.18</td>\n",
       "      <td>16309</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>987</th>\n",
       "      <td>6927</td>\n",
       "      <td>1931-12-18</td>\n",
       "      <td>Patra</td>\n",
       "      <td>38.24444</td>\n",
       "      <td>21.73444</td>\n",
       "      <td>168034</td>\n",
       "      <td>shop_6</td>\n",
       "      <td>kinder-cola</td>\n",
       "      <td>can</td>\n",
       "      <td>330ml</td>\n",
       "      <td>0.85</td>\n",
       "      <td>24378</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>988</th>\n",
       "      <td>6928</td>\n",
       "      <td>1931-12-18</td>\n",
       "      <td>Thessaloniki</td>\n",
       "      <td>40.64361</td>\n",
       "      <td>22.93086</td>\n",
       "      <td>354290</td>\n",
       "      <td>shop_4</td>\n",
       "      <td>adult-cola</td>\n",
       "      <td>plastic</td>\n",
       "      <td>1.5lt</td>\n",
       "      <td>2.17</td>\n",
       "      <td>20691</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>989</th>\n",
       "      <td>6929</td>\n",
       "      <td>1931-12-18</td>\n",
       "      <td>Irakleion</td>\n",
       "      <td>35.32787</td>\n",
       "      <td>25.14341</td>\n",
       "      <td>137154</td>\n",
       "      <td>shop_2</td>\n",
       "      <td>adult-cola</td>\n",
       "      <td>glass</td>\n",
       "      <td>500ml</td>\n",
       "      <td>1.26</td>\n",
       "      <td>24615</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>990 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       id        date          city       lat      long     pop    shop  \\\n",
       "0    5940  1931-01-18        Athens  37.97945  23.71622  664046  shop_1   \n",
       "1    5941  1931-01-18        Athens  37.97945  23.71622  664046  shop_1   \n",
       "2    5942  1931-01-18        Athens  37.97945  23.71622  664046  shop_1   \n",
       "3    5943  1931-01-18        Athens  37.97945  23.71622  664046  shop_1   \n",
       "4    5944  1931-01-18        Athens  37.97945  23.71622  664046  shop_1   \n",
       "..    ...         ...           ...       ...       ...     ...     ...   \n",
       "985  6925  1931-12-18        Athens  37.97945  23.71622  664046  shop_1   \n",
       "986  6926  1931-12-18        Athens  37.97945  23.71622  664046  shop_1   \n",
       "987  6927  1931-12-18         Patra  38.24444  21.73444  168034  shop_6   \n",
       "988  6928  1931-12-18  Thessaloniki  40.64361  22.93086  354290  shop_4   \n",
       "989  6929  1931-12-18     Irakleion  35.32787  25.14341  137154  shop_2   \n",
       "\n",
       "            brand container capacity  price  quantity  \n",
       "0     kinder-cola   plastic    1.5lt   3.10      7056  \n",
       "1     kinder-cola       can    330ml   0.85     12490  \n",
       "2      adult-cola     glass    500ml   0.83     26640  \n",
       "3    orange-power     glass    500ml   0.54     41892  \n",
       "4    orange-power   plastic    1.5lt   0.83     22923  \n",
       "..            ...       ...      ...    ...       ...  \n",
       "985   kinder-cola   plastic    1.5lt   2.52     13760  \n",
       "986  orange-power   plastic    1.5lt   2.18     16309  \n",
       "987   kinder-cola       can    330ml   0.85     24378  \n",
       "988    adult-cola   plastic    1.5lt   2.17     20691  \n",
       "989    adult-cola     glass    500ml   1.26     24615  \n",
       "\n",
       "[990 rows x 12 columns]"
      ]
     },
     "execution_count": 95,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.read_csv('생산제조2_test.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {},
   "outputs": [],
   "source": [
    "test = pd.read_csv('생산제조2_test.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>date</th>\n",
       "      <th>city</th>\n",
       "      <th>lat</th>\n",
       "      <th>long</th>\n",
       "      <th>pop</th>\n",
       "      <th>shop</th>\n",
       "      <th>brand</th>\n",
       "      <th>container</th>\n",
       "      <th>capacity</th>\n",
       "      <th>price</th>\n",
       "      <th>quantity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>1931-01-12</td>\n",
       "      <td>Athens</td>\n",
       "      <td>37.97945</td>\n",
       "      <td>23.71622</td>\n",
       "      <td>672130</td>\n",
       "      <td>shop_1</td>\n",
       "      <td>kinder-cola</td>\n",
       "      <td>glass</td>\n",
       "      <td>500ml</td>\n",
       "      <td>0.96</td>\n",
       "      <td>13280</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1931-01-12</td>\n",
       "      <td>Athens</td>\n",
       "      <td>37.97945</td>\n",
       "      <td>23.71622</td>\n",
       "      <td>672130</td>\n",
       "      <td>shop_1</td>\n",
       "      <td>kinder-cola</td>\n",
       "      <td>plastic</td>\n",
       "      <td>1.5lt</td>\n",
       "      <td>2.86</td>\n",
       "      <td>6727</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>1931-01-12</td>\n",
       "      <td>Athens</td>\n",
       "      <td>37.97945</td>\n",
       "      <td>23.71622</td>\n",
       "      <td>672130</td>\n",
       "      <td>shop_1</td>\n",
       "      <td>kinder-cola</td>\n",
       "      <td>can</td>\n",
       "      <td>330ml</td>\n",
       "      <td>0.87</td>\n",
       "      <td>9848</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>1931-01-12</td>\n",
       "      <td>Athens</td>\n",
       "      <td>37.97945</td>\n",
       "      <td>23.71622</td>\n",
       "      <td>672130</td>\n",
       "      <td>shop_1</td>\n",
       "      <td>adult-cola</td>\n",
       "      <td>glass</td>\n",
       "      <td>500ml</td>\n",
       "      <td>1.00</td>\n",
       "      <td>20050</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>1931-01-12</td>\n",
       "      <td>Athens</td>\n",
       "      <td>37.97945</td>\n",
       "      <td>23.71622</td>\n",
       "      <td>672130</td>\n",
       "      <td>shop_1</td>\n",
       "      <td>adult-cola</td>\n",
       "      <td>can</td>\n",
       "      <td>330ml</td>\n",
       "      <td>0.39</td>\n",
       "      <td>25696</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5935</th>\n",
       "      <td>5935</td>\n",
       "      <td>1931-12-17</td>\n",
       "      <td>Athens</td>\n",
       "      <td>37.96245</td>\n",
       "      <td>23.68708</td>\n",
       "      <td>665871</td>\n",
       "      <td>shop_3</td>\n",
       "      <td>orange-power</td>\n",
       "      <td>plastic</td>\n",
       "      <td>1.5lt</td>\n",
       "      <td>1.02</td>\n",
       "      <td>33201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5936</th>\n",
       "      <td>5936</td>\n",
       "      <td>1931-12-17</td>\n",
       "      <td>Larisa</td>\n",
       "      <td>39.63689</td>\n",
       "      <td>22.41761</td>\n",
       "      <td>144302</td>\n",
       "      <td>shop_5</td>\n",
       "      <td>orange-power</td>\n",
       "      <td>can</td>\n",
       "      <td>330ml</td>\n",
       "      <td>0.47</td>\n",
       "      <td>46971</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5937</th>\n",
       "      <td>5937</td>\n",
       "      <td>1931-12-17</td>\n",
       "      <td>Patra</td>\n",
       "      <td>38.24444</td>\n",
       "      <td>21.73444</td>\n",
       "      <td>168501</td>\n",
       "      <td>shop_6</td>\n",
       "      <td>adult-cola</td>\n",
       "      <td>glass</td>\n",
       "      <td>500ml</td>\n",
       "      <td>1.02</td>\n",
       "      <td>47708</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5938</th>\n",
       "      <td>5938</td>\n",
       "      <td>1931-12-17</td>\n",
       "      <td>Thessaloniki</td>\n",
       "      <td>40.64361</td>\n",
       "      <td>22.93086</td>\n",
       "      <td>353001</td>\n",
       "      <td>shop_4</td>\n",
       "      <td>gazoza</td>\n",
       "      <td>plastic</td>\n",
       "      <td>1.5lt</td>\n",
       "      <td>1.34</td>\n",
       "      <td>27115</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5939</th>\n",
       "      <td>5939</td>\n",
       "      <td>1931-12-17</td>\n",
       "      <td>Thessaloniki</td>\n",
       "      <td>40.64361</td>\n",
       "      <td>22.93086</td>\n",
       "      <td>353001</td>\n",
       "      <td>shop_4</td>\n",
       "      <td>adult-cola</td>\n",
       "      <td>glass</td>\n",
       "      <td>500ml</td>\n",
       "      <td>1.16</td>\n",
       "      <td>30413</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5940 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        id        date          city       lat      long     pop    shop  \\\n",
       "0        0  1931-01-12        Athens  37.97945  23.71622  672130  shop_1   \n",
       "1        1  1931-01-12        Athens  37.97945  23.71622  672130  shop_1   \n",
       "2        2  1931-01-12        Athens  37.97945  23.71622  672130  shop_1   \n",
       "3        3  1931-01-12        Athens  37.97945  23.71622  672130  shop_1   \n",
       "4        4  1931-01-12        Athens  37.97945  23.71622  672130  shop_1   \n",
       "...    ...         ...           ...       ...       ...     ...     ...   \n",
       "5935  5935  1931-12-17        Athens  37.96245  23.68708  665871  shop_3   \n",
       "5936  5936  1931-12-17        Larisa  39.63689  22.41761  144302  shop_5   \n",
       "5937  5937  1931-12-17         Patra  38.24444  21.73444  168501  shop_6   \n",
       "5938  5938  1931-12-17  Thessaloniki  40.64361  22.93086  353001  shop_4   \n",
       "5939  5939  1931-12-17  Thessaloniki  40.64361  22.93086  353001  shop_4   \n",
       "\n",
       "             brand container capacity  price  quantity  \n",
       "0      kinder-cola     glass    500ml   0.96     13280  \n",
       "1      kinder-cola   plastic    1.5lt   2.86      6727  \n",
       "2      kinder-cola       can    330ml   0.87      9848  \n",
       "3       adult-cola     glass    500ml   1.00     20050  \n",
       "4       adult-cola       can    330ml   0.39     25696  \n",
       "...            ...       ...      ...    ...       ...  \n",
       "5935  orange-power   plastic    1.5lt   1.02     33201  \n",
       "5936  orange-power       can    330ml   0.47     46971  \n",
       "5937    adult-cola     glass    500ml   1.02     47708  \n",
       "5938        gazoza   plastic    1.5lt   1.34     27115  \n",
       "5939    adult-cola     glass    500ml   1.16     30413  \n",
       "\n",
       "[5940 rows x 12 columns]"
      ]
     },
     "execution_count": 97,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.read_csv('생산제조2_train.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(5940, 12)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>date</th>\n",
       "      <th>city</th>\n",
       "      <th>lat</th>\n",
       "      <th>long</th>\n",
       "      <th>pop</th>\n",
       "      <th>shop</th>\n",
       "      <th>brand</th>\n",
       "      <th>container</th>\n",
       "      <th>capacity</th>\n",
       "      <th>price</th>\n",
       "      <th>quantity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>1931-01-12</td>\n",
       "      <td>Athens</td>\n",
       "      <td>37.97945</td>\n",
       "      <td>23.71622</td>\n",
       "      <td>672130</td>\n",
       "      <td>shop_1</td>\n",
       "      <td>kinder-cola</td>\n",
       "      <td>glass</td>\n",
       "      <td>500ml</td>\n",
       "      <td>0.96</td>\n",
       "      <td>13280</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1931-01-12</td>\n",
       "      <td>Athens</td>\n",
       "      <td>37.97945</td>\n",
       "      <td>23.71622</td>\n",
       "      <td>672130</td>\n",
       "      <td>shop_1</td>\n",
       "      <td>kinder-cola</td>\n",
       "      <td>plastic</td>\n",
       "      <td>1.5lt</td>\n",
       "      <td>2.86</td>\n",
       "      <td>6727</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>1931-01-12</td>\n",
       "      <td>Athens</td>\n",
       "      <td>37.97945</td>\n",
       "      <td>23.71622</td>\n",
       "      <td>672130</td>\n",
       "      <td>shop_1</td>\n",
       "      <td>kinder-cola</td>\n",
       "      <td>can</td>\n",
       "      <td>330ml</td>\n",
       "      <td>0.87</td>\n",
       "      <td>9848</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>1931-01-12</td>\n",
       "      <td>Athens</td>\n",
       "      <td>37.97945</td>\n",
       "      <td>23.71622</td>\n",
       "      <td>672130</td>\n",
       "      <td>shop_1</td>\n",
       "      <td>adult-cola</td>\n",
       "      <td>glass</td>\n",
       "      <td>500ml</td>\n",
       "      <td>1.00</td>\n",
       "      <td>20050</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>1931-01-12</td>\n",
       "      <td>Athens</td>\n",
       "      <td>37.97945</td>\n",
       "      <td>23.71622</td>\n",
       "      <td>672130</td>\n",
       "      <td>shop_1</td>\n",
       "      <td>adult-cola</td>\n",
       "      <td>can</td>\n",
       "      <td>330ml</td>\n",
       "      <td>0.39</td>\n",
       "      <td>25696</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   id       date    city       lat      long     pop    shop        brand  \\\n",
       "0   0 1931-01-12  Athens  37.97945  23.71622  672130  shop_1  kinder-cola   \n",
       "1   1 1931-01-12  Athens  37.97945  23.71622  672130  shop_1  kinder-cola   \n",
       "2   2 1931-01-12  Athens  37.97945  23.71622  672130  shop_1  kinder-cola   \n",
       "3   3 1931-01-12  Athens  37.97945  23.71622  672130  shop_1   adult-cola   \n",
       "4   4 1931-01-12  Athens  37.97945  23.71622  672130  shop_1   adult-cola   \n",
       "\n",
       "  container capacity  price  quantity  \n",
       "0     glass    500ml   0.96     13280  \n",
       "1   plastic    1.5lt   2.86      6727  \n",
       "2       can    330ml   0.87      9848  \n",
       "3     glass    500ml   1.00     20050  \n",
       "4       can    330ml   0.39     25696  "
      ]
     },
     "execution_count": 98,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train = pd.read_csv('생산제조2_train.csv', parse_dates=[\"date\"])\n",
    "print(train.shape)\n",
    "train.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "metadata": {},
   "outputs": [],
   "source": [
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(5940, 15)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>date</th>\n",
       "      <th>city</th>\n",
       "      <th>lat</th>\n",
       "      <th>long</th>\n",
       "      <th>pop</th>\n",
       "      <th>shop</th>\n",
       "      <th>brand</th>\n",
       "      <th>container</th>\n",
       "      <th>capacity</th>\n",
       "      <th>price</th>\n",
       "      <th>quantity</th>\n",
       "      <th>date-year</th>\n",
       "      <th>date-month</th>\n",
       "      <th>date-day</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>1931-01-12</td>\n",
       "      <td>Athens</td>\n",
       "      <td>37.97945</td>\n",
       "      <td>23.71622</td>\n",
       "      <td>672130</td>\n",
       "      <td>shop_1</td>\n",
       "      <td>kinder-cola</td>\n",
       "      <td>glass</td>\n",
       "      <td>500ml</td>\n",
       "      <td>0.96</td>\n",
       "      <td>13280</td>\n",
       "      <td>1931</td>\n",
       "      <td>1</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1931-01-12</td>\n",
       "      <td>Athens</td>\n",
       "      <td>37.97945</td>\n",
       "      <td>23.71622</td>\n",
       "      <td>672130</td>\n",
       "      <td>shop_1</td>\n",
       "      <td>kinder-cola</td>\n",
       "      <td>plastic</td>\n",
       "      <td>1.5lt</td>\n",
       "      <td>2.86</td>\n",
       "      <td>6727</td>\n",
       "      <td>1931</td>\n",
       "      <td>1</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>1931-01-12</td>\n",
       "      <td>Athens</td>\n",
       "      <td>37.97945</td>\n",
       "      <td>23.71622</td>\n",
       "      <td>672130</td>\n",
       "      <td>shop_1</td>\n",
       "      <td>kinder-cola</td>\n",
       "      <td>can</td>\n",
       "      <td>330ml</td>\n",
       "      <td>0.87</td>\n",
       "      <td>9848</td>\n",
       "      <td>1931</td>\n",
       "      <td>1</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>1931-01-12</td>\n",
       "      <td>Athens</td>\n",
       "      <td>37.97945</td>\n",
       "      <td>23.71622</td>\n",
       "      <td>672130</td>\n",
       "      <td>shop_1</td>\n",
       "      <td>adult-cola</td>\n",
       "      <td>glass</td>\n",
       "      <td>500ml</td>\n",
       "      <td>1.00</td>\n",
       "      <td>20050</td>\n",
       "      <td>1931</td>\n",
       "      <td>1</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>1931-01-12</td>\n",
       "      <td>Athens</td>\n",
       "      <td>37.97945</td>\n",
       "      <td>23.71622</td>\n",
       "      <td>672130</td>\n",
       "      <td>shop_1</td>\n",
       "      <td>adult-cola</td>\n",
       "      <td>can</td>\n",
       "      <td>330ml</td>\n",
       "      <td>0.39</td>\n",
       "      <td>25696</td>\n",
       "      <td>1931</td>\n",
       "      <td>1</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   id       date    city       lat      long     pop    shop        brand  \\\n",
       "0   0 1931-01-12  Athens  37.97945  23.71622  672130  shop_1  kinder-cola   \n",
       "1   1 1931-01-12  Athens  37.97945  23.71622  672130  shop_1  kinder-cola   \n",
       "2   2 1931-01-12  Athens  37.97945  23.71622  672130  shop_1  kinder-cola   \n",
       "3   3 1931-01-12  Athens  37.97945  23.71622  672130  shop_1   adult-cola   \n",
       "4   4 1931-01-12  Athens  37.97945  23.71622  672130  shop_1   adult-cola   \n",
       "\n",
       "  container capacity  price  quantity  date-year  date-month  date-day  \n",
       "0     glass    500ml   0.96     13280       1931           1        12  \n",
       "1   plastic    1.5lt   2.86      6727       1931           1        12  \n",
       "2       can    330ml   0.87      9848       1931           1        12  \n",
       "3     glass    500ml   1.00     20050       1931           1        12  \n",
       "4       can    330ml   0.39     25696       1931           1        12  "
      ]
     },
     "execution_count": 100,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train[\"date-year\"] = train[\"date\"].dt.year\n",
    "train[\"date-month\"] = train[\"date\"].dt.month\n",
    "train[\"date-day\"] = train[\"date\"].dt.day\n",
    "\n",
    "print(train.shape)\n",
    "train[[\"date\", \"date-year\", \"date-month\", \"date-day\"]].head()\n",
    "train.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x19e8f802e88>"
      ]
     },
     "execution_count": 101,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.barplot(data=train, x=\"date-year\", y=\"quantity\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x19e8f83bdc8>"
      ]
     },
     "execution_count": 102,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.barplot(data=train, x=\"date-month\", y=\"quantity\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x19e8f8fab08>"
      ]
     },
     "execution_count": 103,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.barplot(data=train, x=\"date-day\", y=\"quantity\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x19e8f970cc8>"
      ]
     },
     "execution_count": 104,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.barplot(data=train, x=\"city\", y=\"quantity\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x19e8f9d3cc8>"
      ]
     },
     "execution_count": 105,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.barplot(data=train, x=\"lat\", y=\"quantity\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x19e8fa47c48>"
      ]
     },
     "execution_count": 106,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.barplot(data=train, x=\"long\", y=\"quantity\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x19e8f9de848>"
      ]
     },
     "execution_count": 107,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.barplot(data=train, x=\"pop\", y=\"quantity\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x19e8fc26608>"
      ]
     },
     "execution_count": 108,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.barplot(data=train, x=\"shop\", y=\"quantity\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x19e8fc22d48>"
      ]
     },
     "execution_count": 109,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.barplot(data=train, x=\"brand\", y=\"quantity\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x19e8fcdad08>"
      ]
     },
     "execution_count": 110,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.barplot(data=train, x=\"container\", y=\"quantity\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x19e8fd4a908>"
      ]
     },
     "execution_count": 111,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.barplot(data=train, x=\"capacity\", y=\"quantity\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x19e8fe99f88>"
      ]
     },
     "execution_count": 112,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.barplot(data=train, x=\"price\", y=\"quantity\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x19e90dbd788>"
      ]
     },
     "execution_count": 113,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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RERERKRsqKJDRERERERERMqGKjpEREREREREpGyookNEREREREREyoYqOkRERERERESkbKiiQ0RERERERETKhio6RERERERERKRsqKJDRERERERERMqGKjpEREREREREpGyookNEREREREREyoYqOkRERERERESkbKiiQ0RERERERETKhio6RERERERERKRsqKJDRERERERERMqGKjpEREREREREpGyookNEREREREREyoYqOkRERERERESkbKiiQ0RERERERETKRtEqOszsLjNbbGavZ9IGmtkUM5sR3wMi3czsJjOrNLNXzezAzDCjo/8ZZjY6k36Qmb0Ww9xkZlaseRGRtqF8QURERJpCZQYRaY1itui4BxiZl3YZ8IS7DweeiP8AJwDD43MecCukzAy4EjgEOBi4MpehRT/nZYbLn5aIdDz3oHxBREREGncPKjOISAsVraLD3f8KVOUljwLGxe9xwOcy6fd68hzQ38x2AY4Hprh7lbsvA6YAI6NbP3d/1t0duDczLhHpoJQviIiISFOozCAirdHez+jYyd0XAMT34EgfAszJ9Dc30raWPrdAuoh0PsoXRLowNU8XkWZQmUFEmqSjPIy0UKHDW5BeeORm55nZVDObumTJkhaGKCLtTPmCSNdwD2qeLiKtU7Qyg8oLIp1Te1d0LIqmYsT34kifC+yW6W8oML+R9KEF0gty99vdfYS7jxg0aFCrZ0JE2pTyBZEuTM3TRaQZ2r3MoPKCSOfU3hUdk4Bcc9LRwO8y6WdHk9RDgRXRHO1x4DgzGxBXZo4DHo9uq8zs0GiCenZmXCLSuShfEJF8ap4uIoWozCAiTdK9WCM2s18DRwM7mtlcUpPSHwEPmNm5wGzgjOj9EeBEoBJYA5wD4O5VZvYD4MXo7/vunrvq8w1Sc9eewKPxEZEOTPmCiLRS0W9pI93mwtCBO7QkPhFpIyoziEhrFK2iw92/1ECnYwv068D5DYznLuCuAulTgX1bE6OItC/lCyLSRIvMbBd3X9CM5ulH56U/RQtuaQNuB9h/jw81WCEiIsWnMoOItEZHeRipiIiISI6ap4uIiEiLFa1Fh4iIiEhj1DxdRERE2poqOkRERKRk1DxdRERE2ppuXRERERERERGRsqGKDhEREREREREpG6roEBEREREREZGyoYoOERERERERESkbqugQERERERERkbKhig4RERERERERKRuq6BARERERERGRsqGKDhEREREREREpG6roEBEREREREZGyoYoOERERERERESkbqugQERERERERkbKhig4RERERERERKRuq6BARERERERGRsqGKDhEREREREREpG6roEBEREREREZGyoYoOERERERERESkbqugQERERERERkbKhig4RERERERERKRuq6BARERERERGRsqGKDhEREREREREpG6roEBEREREREZGyoYoOERERERERESkbnb6iw8xGmtnbZlZpZpeVOh4RKT3lCyKST/mCiORTviBSvjp1RYeZVQC3ACcA+wBfMrN9ShuViJSS8gURyad8QUTyKV8QKW+duqIDOBiodPeZ7r4BGA+MKnFMIlJayhdEJJ/yBRHJp3xBpIx19oqOIcCczP+5kSYiXZfyBRHJp3xBRPIpXxApY+bupY6hxczsDOB4d//X+H8WcLC7X5jX33nAefH3o8DbbTD5HYGlbTCettLR4oGOF5PiaVxbxbSHuw9qg/E0m/KFejpaPNDxYlI8jVO+0Pgy2Fr3YnTrbOPVvHS+aRZrvPndOnO+0BodLa/vaPFAx4upo8UDHS+mDlVe6N4GgZTSXGC3zP+hwPz8ntz9duD2tpywmU119xFtOc7W6GjxQMeLSfE0riPG1ALKF0JHiwc6XkyKp3EdMaYWaFW+0Ngy2Fr3YnTrbOPVvHS+aRZrvB0sP1F5IXS0eKDjxdTR4oGOF1NHi6ez37ryIjDczPY0sx7AmcCkEsckIqWlfEFE8ilfEJF8yhdEylinbtHh7jVmdgHwOFAB3OXu00scloiUkPIFEcmnfEFE8ilfEClvnbqiA8DdHwEeKcGk27QJWxvoaPFAx4tJ8TSuI8bUbMoXNuto8UDHi0nxNK4jxtRsrcwXGlsGW+tejG6dbbyal843zWKNt0PlJyovbNbR4oGOF1NHiwc6XkwdKp5O/TBSEREREREREZGszv6MDhERERERERGROu5e1A+wHfAC8AowHbg60u8B3gP+EZ/9Cwy7BzAtuk8H/j3SewF/AN6K9B9lhrk+M853gOWZbtdG/28CNwEG9M30/w/SK3FuiP63BX4DVALPA8My4xob6W+TXk2VSx8ZaZXAZZn0PWM5rAOWA28AV8c0lgDrgdXAIuC3haYB/Bh4HZhFeip0JXBZzMc1wExgLbA4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\n",
      "text/plain": [
       "<Figure size 1296x720 with 12 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "figure, ((ax1, ax2, ax3, ax4), (ax5, ax6, ax7, ax8), (ax9, ax10, ax11, ax12)) = plt.subplots(nrows=3, ncols=4)\n",
    "figure.set_size_inches(18, 10)\n",
    "\n",
    "sns.barplot(data=train, x=\"date-year\", y=\"quantity\", ax=ax1)\n",
    "sns.barplot(data=train, x=\"date-month\", y=\"quantity\", ax=ax2)\n",
    "sns.barplot(data=train, x=\"date-day\", y=\"quantity\", ax=ax3)\n",
    "sns.barplot(data=train, x=\"city\", y=\"quantity\", ax=ax4)\n",
    "sns.barplot(data=train, x=\"lat\", y=\"quantity\", ax=ax5)\n",
    "sns.barplot(data=train, x=\"long\", y=\"quantity\", ax=ax6)\n",
    "sns.barplot(data=train, x=\"pop\", y=\"quantity\", ax=ax7)\n",
    "sns.barplot(data=train, x=\"shop\", y=\"quantity\", ax=ax8)\n",
    "sns.barplot(data=train, x=\"brand\", y=\"quantity\", ax=ax9)\n",
    "sns.barplot(data=train, x=\"container\", y=\"quantity\", ax=ax10)\n",
    "sns.barplot(data=train, x=\"capacity\", y=\"quantity\", ax=ax11)\n",
    "sns.barplot(data=train, x=\"price\", y=\"quantity\", ax=ax12)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Train"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "metadata": {},
   "outputs": [],
   "source": [
    "train = pd.read_csv('생산제조2_train.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "pandas.core.frame.DataFrame"
      ]
     },
     "execution_count": 115,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "metadata": {},
   "outputs": [],
   "source": [
    "train = train.dropna()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "metadata": {},
   "outputs": [],
   "source": [
    "test = pd.read_csv('생산제조2_test.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "metadata": {},
   "outputs": [],
   "source": [
    "test = test.dropna()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 138,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>id</th>\n",
       "      <th>date</th>\n",
       "      <th>city</th>\n",
       "      <th>lat</th>\n",
       "      <th>long</th>\n",
       "      <th>pop</th>\n",
       "      <th>shop</th>\n",
       "      <th>brand</th>\n",
       "      <th>container</th>\n",
       "      <th>capacity</th>\n",
       "      <th>price</th>\n",
       "      <th>quantity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>1931-01-12</td>\n",
       "      <td>Athens</td>\n",
       "      <td>37.97945</td>\n",
       "      <td>23.71622</td>\n",
       "      <td>672130</td>\n",
       "      <td>shop_1</td>\n",
       "      <td>kinder-cola</td>\n",
       "      <td>glass</td>\n",
       "      <td>500ml</td>\n",
       "      <td>0.96</td>\n",
       "      <td>13280</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1931-01-12</td>\n",
       "      <td>Athens</td>\n",
       "      <td>37.97945</td>\n",
       "      <td>23.71622</td>\n",
       "      <td>672130</td>\n",
       "      <td>shop_1</td>\n",
       "      <td>kinder-cola</td>\n",
       "      <td>plastic</td>\n",
       "      <td>1.5lt</td>\n",
       "      <td>2.86</td>\n",
       "      <td>6727</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>1931-01-12</td>\n",
       "      <td>Athens</td>\n",
       "      <td>37.97945</td>\n",
       "      <td>23.71622</td>\n",
       "      <td>672130</td>\n",
       "      <td>shop_1</td>\n",
       "      <td>kinder-cola</td>\n",
       "      <td>can</td>\n",
       "      <td>330ml</td>\n",
       "      <td>0.87</td>\n",
       "      <td>9848</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>1931-01-12</td>\n",
       "      <td>Athens</td>\n",
       "      <td>37.97945</td>\n",
       "      <td>23.71622</td>\n",
       "      <td>672130</td>\n",
       "      <td>shop_1</td>\n",
       "      <td>adult-cola</td>\n",
       "      <td>glass</td>\n",
       "      <td>500ml</td>\n",
       "      <td>1.00</td>\n",
       "      <td>20050</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>1931-01-12</td>\n",
       "      <td>Athens</td>\n",
       "      <td>37.97945</td>\n",
       "      <td>23.71622</td>\n",
       "      <td>672130</td>\n",
       "      <td>shop_1</td>\n",
       "      <td>adult-cola</td>\n",
       "      <td>can</td>\n",
       "      <td>330ml</td>\n",
       "      <td>0.39</td>\n",
       "      <td>25696</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5935</th>\n",
       "      <td>5935</td>\n",
       "      <td>1931-12-17</td>\n",
       "      <td>Athens</td>\n",
       "      <td>37.96245</td>\n",
       "      <td>23.68708</td>\n",
       "      <td>665871</td>\n",
       "      <td>shop_3</td>\n",
       "      <td>orange-power</td>\n",
       "      <td>plastic</td>\n",
       "      <td>1.5lt</td>\n",
       "      <td>1.02</td>\n",
       "      <td>33201</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5936</th>\n",
       "      <td>5936</td>\n",
       "      <td>1931-12-17</td>\n",
       "      <td>Larisa</td>\n",
       "      <td>39.63689</td>\n",
       "      <td>22.41761</td>\n",
       "      <td>144302</td>\n",
       "      <td>shop_5</td>\n",
       "      <td>orange-power</td>\n",
       "      <td>can</td>\n",
       "      <td>330ml</td>\n",
       "      <td>0.47</td>\n",
       "      <td>46971</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5937</th>\n",
       "      <td>5937</td>\n",
       "      <td>1931-12-17</td>\n",
       "      <td>Patra</td>\n",
       "      <td>38.24444</td>\n",
       "      <td>21.73444</td>\n",
       "      <td>168501</td>\n",
       "      <td>shop_6</td>\n",
       "      <td>adult-cola</td>\n",
       "      <td>glass</td>\n",
       "      <td>500ml</td>\n",
       "      <td>1.02</td>\n",
       "      <td>47708</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5938</th>\n",
       "      <td>5938</td>\n",
       "      <td>1931-12-17</td>\n",
       "      <td>Thessaloniki</td>\n",
       "      <td>40.64361</td>\n",
       "      <td>22.93086</td>\n",
       "      <td>353001</td>\n",
       "      <td>shop_4</td>\n",
       "      <td>gazoza</td>\n",
       "      <td>plastic</td>\n",
       "      <td>1.5lt</td>\n",
       "      <td>1.34</td>\n",
       "      <td>27115</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5939</th>\n",
       "      <td>5939</td>\n",
       "      <td>1931-12-17</td>\n",
       "      <td>Thessaloniki</td>\n",
       "      <td>40.64361</td>\n",
       "      <td>22.93086</td>\n",
       "      <td>353001</td>\n",
       "      <td>shop_4</td>\n",
       "      <td>adult-cola</td>\n",
       "      <td>glass</td>\n",
       "      <td>500ml</td>\n",
       "      <td>1.16</td>\n",
       "      <td>30413</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5847 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        id        date          city       lat      long     pop    shop  \\\n",
       "0        0  1931-01-12        Athens  37.97945  23.71622  672130  shop_1   \n",
       "1        1  1931-01-12        Athens  37.97945  23.71622  672130  shop_1   \n",
       "2        2  1931-01-12        Athens  37.97945  23.71622  672130  shop_1   \n",
       "3        3  1931-01-12        Athens  37.97945  23.71622  672130  shop_1   \n",
       "4        4  1931-01-12        Athens  37.97945  23.71622  672130  shop_1   \n",
       "...    ...         ...           ...       ...       ...     ...     ...   \n",
       "5935  5935  1931-12-17        Athens  37.96245  23.68708  665871  shop_3   \n",
       "5936  5936  1931-12-17        Larisa  39.63689  22.41761  144302  shop_5   \n",
       "5937  5937  1931-12-17         Patra  38.24444  21.73444  168501  shop_6   \n",
       "5938  5938  1931-12-17  Thessaloniki  40.64361  22.93086  353001  shop_4   \n",
       "5939  5939  1931-12-17  Thessaloniki  40.64361  22.93086  353001  shop_4   \n",
       "\n",
       "             brand container capacity  price  quantity  \n",
       "0      kinder-cola     glass    500ml   0.96     13280  \n",
       "1      kinder-cola   plastic    1.5lt   2.86      6727  \n",
       "2      kinder-cola       can    330ml   0.87      9848  \n",
       "3       adult-cola     glass    500ml   1.00     20050  \n",
       "4       adult-cola       can    330ml   0.39     25696  \n",
       "...            ...       ...      ...    ...       ...  \n",
       "5935  orange-power   plastic    1.5lt   1.02     33201  \n",
       "5936  orange-power       can    330ml   0.47     46971  \n",
       "5937    adult-cola     glass    500ml   1.02     47708  \n",
       "5938        gazoza   plastic    1.5lt   1.34     27115  \n",
       "5939    adult-cola     glass    500ml   1.16     30413  \n",
       "\n",
       "[5847 rows x 12 columns]"
      ]
     },
     "execution_count": 138,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train.replace({'city':'Athens'}, {'city':'0'})\n",
    "train"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['lat', 'long', 'pop', 'price']"
      ]
     },
     "execution_count": 119,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "feature_names = [\"lat\", \"long\",\n",
    "                 \"pop\",\n",
    "                 \"price\"]\n",
    "\n",
    "feature_names"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['id', 'date', 'city', 'lat', 'long', 'pop', 'shop', 'brand',\n",
       "       'container', 'capacity', 'price', 'quantity'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 120,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(5847, 4)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>lat</th>\n",
       "      <th>long</th>\n",
       "      <th>pop</th>\n",
       "      <th>price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>37.97945</td>\n",
       "      <td>23.71622</td>\n",
       "      <td>672130</td>\n",
       "      <td>0.96</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>37.97945</td>\n",
       "      <td>23.71622</td>\n",
       "      <td>672130</td>\n",
       "      <td>2.86</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>37.97945</td>\n",
       "      <td>23.71622</td>\n",
       "      <td>672130</td>\n",
       "      <td>0.87</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>37.97945</td>\n",
       "      <td>23.71622</td>\n",
       "      <td>672130</td>\n",
       "      <td>1.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>37.97945</td>\n",
       "      <td>23.71622</td>\n",
       "      <td>672130</td>\n",
       "      <td>0.39</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        lat      long     pop  price\n",
       "0  37.97945  23.71622  672130   0.96\n",
       "1  37.97945  23.71622  672130   2.86\n",
       "2  37.97945  23.71622  672130   0.87\n",
       "3  37.97945  23.71622  672130   1.00\n",
       "4  37.97945  23.71622  672130   0.39"
      ]
     },
     "execution_count": 121,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train = train[feature_names]\n",
    "\n",
    "print(X_train.shape)\n",
    "X_train.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(969, 4)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>lat</th>\n",
       "      <th>long</th>\n",
       "      <th>pop</th>\n",
       "      <th>price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>37.97945</td>\n",
       "      <td>23.71622</td>\n",
       "      <td>664046</td>\n",
       "      <td>3.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>37.97945</td>\n",
       "      <td>23.71622</td>\n",
       "      <td>664046</td>\n",
       "      <td>0.85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>37.97945</td>\n",
       "      <td>23.71622</td>\n",
       "      <td>664046</td>\n",
       "      <td>0.83</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>37.97945</td>\n",
       "      <td>23.71622</td>\n",
       "      <td>664046</td>\n",
       "      <td>0.54</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>37.97945</td>\n",
       "      <td>23.71622</td>\n",
       "      <td>664046</td>\n",
       "      <td>0.83</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        lat      long     pop  price\n",
       "0  37.97945  23.71622  664046   3.10\n",
       "1  37.97945  23.71622  664046   0.85\n",
       "2  37.97945  23.71622  664046   0.83\n",
       "3  37.97945  23.71622  664046   0.54\n",
       "4  37.97945  23.71622  664046   0.83"
      ]
     },
     "execution_count": 122,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_test = test[feature_names]\n",
    "\n",
    "print(X_test.shape)\n",
    "X_test.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(5847,)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "0    13280\n",
       "1     6727\n",
       "2     9848\n",
       "3    20050\n",
       "4    25696\n",
       "Name: quantity, dtype: int64"
      ]
     },
     "execution_count": 123,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "label_name = \"quantity\"\n",
    "\n",
    "y_train = train[label_name]\n",
    "\n",
    "print(y_train.shape)\n",
    "y_train.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(5847, 4)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>lat</th>\n",
       "      <th>long</th>\n",
       "      <th>pop</th>\n",
       "      <th>price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>37.97945</td>\n",
       "      <td>23.71622</td>\n",
       "      <td>672130</td>\n",
       "      <td>0.96</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>37.97945</td>\n",
       "      <td>23.71622</td>\n",
       "      <td>672130</td>\n",
       "      <td>2.86</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>37.97945</td>\n",
       "      <td>23.71622</td>\n",
       "      <td>672130</td>\n",
       "      <td>0.87</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>37.97945</td>\n",
       "      <td>23.71622</td>\n",
       "      <td>672130</td>\n",
       "      <td>1.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>37.97945</td>\n",
       "      <td>23.71622</td>\n",
       "      <td>672130</td>\n",
       "      <td>0.39</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        lat      long     pop  price\n",
       "0  37.97945  23.71622  672130   0.96\n",
       "1  37.97945  23.71622  672130   2.86\n",
       "2  37.97945  23.71622  672130   0.87\n",
       "3  37.97945  23.71622  672130   1.00\n",
       "4  37.97945  23.71622  672130   0.39"
      ]
     },
     "execution_count": 124,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_train = train[feature_names]\n",
    "\n",
    "print(y_train.shape)\n",
    "y_train.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Fitting"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n",
       "                      max_depth=25, max_features=0.9, max_leaf_nodes=None,\n",
       "                      max_samples=None, min_impurity_decrease=0.0,\n",
       "                      min_impurity_split=None, min_samples_leaf=1,\n",
       "                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n",
       "                      n_estimators=3000, n_jobs=-1, oob_score=False,\n",
       "                      random_state=37, verbose=0, warm_start=False)"
      ]
     },
     "execution_count": 125,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.ensemble import RandomForestRegressor\n",
    "\n",
    "model = RandomForestRegressor(n_estimators=3000,\n",
    "                              max_depth=25,\n",
    "                              max_features=0.9,\n",
    "                              random_state=37,\n",
    "                              n_jobs=-1)\n",
    "model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RandomForestRegressor(bootstrap=True, ccp_alpha=0.0, criterion='mse',\n",
       "                      max_depth=25, max_features=0.9, max_leaf_nodes=None,\n",
       "                      max_samples=None, min_impurity_decrease=0.0,\n",
       "                      min_impurity_split=None, min_samples_leaf=1,\n",
       "                      min_samples_split=2, min_weight_fraction_leaf=0.0,\n",
       "                      n_estimators=3000, n_jobs=-1, oob_score=False,\n",
       "                      random_state=37, verbose=0, warm_start=False)"
      ]
     },
     "execution_count": 126,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(969, 4)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "array([[3.79780365e+01, 2.37137972e+01, 6.65131677e+05, 3.18234319e+00],\n",
       "       [3.79784019e+01, 2.37144235e+01, 6.65102769e+05, 8.60473501e-01],\n",
       "       [3.79785973e+01, 2.37147583e+01, 6.65102256e+05, 8.28927267e-01],\n",
       "       ...,\n",
       "       [3.82444400e+01, 2.17344400e+01, 1.68249643e+05, 8.42755167e-01],\n",
       "       [4.06436100e+01, 2.29308600e+01, 3.52999684e+05, 2.18568422e+00],\n",
       "       [3.53278700e+01, 2.51434100e+01, 1.37302299e+05, 1.25406000e+00]])"
      ]
     },
     "execution_count": 127,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predictions = model.predict(X_test)\n",
    "\n",
    "print(predictions.shape)\n",
    "predictions"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "선형 회귀"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn import linear_model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None, normalize=False)"
      ]
     },
     "execution_count": 129,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lm=linear_model.LinearRegression()\n",
    "lm.fit(X_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(969, 4)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "array([[3.79780365e+01, 2.37137972e+01, 6.65131677e+05, 3.18234319e+00],\n",
       "       [3.79784019e+01, 2.37144235e+01, 6.65102769e+05, 8.60473501e-01],\n",
       "       [3.79785973e+01, 2.37147583e+01, 6.65102256e+05, 8.28927267e-01],\n",
       "       ...,\n",
       "       [3.82444400e+01, 2.17344400e+01, 1.68249643e+05, 8.42755167e-01],\n",
       "       [4.06436100e+01, 2.29308600e+01, 3.52999684e+05, 2.18568422e+00],\n",
       "       [3.53278700e+01, 2.51434100e+01, 1.37302299e+05, 1.25406000e+00]])"
      ]
     },
     "execution_count": 130,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predictions2 = model.predict(X_test)\n",
    "\n",
    "print(predictions2.shape)\n",
    "predictions2"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Decision Tree Regressor"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.tree import DecisionTreeRegressor"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "metadata": {},
   "outputs": [],
   "source": [
    "dtr = DecisionTreeRegressor()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DecisionTreeRegressor(ccp_alpha=0.0, criterion='mse', max_depth=None,\n",
       "                      max_features=None, max_leaf_nodes=None,\n",
       "                      min_impurity_decrease=0.0, min_impurity_split=None,\n",
       "                      min_samples_leaf=1, min_samples_split=2,\n",
       "                      min_weight_fraction_leaf=0.0, presort='deprecated',\n",
       "                      random_state=None, splitter='best')"
      ]
     },
     "execution_count": 133,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dtr.fit(X_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "metadata": {},
   "outputs": [],
   "source": [
    "predict_train = dtr.predict(X_train)\n",
    "predict_test = dtr.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[3.79794500e+01, 2.37162200e+01, 6.72130000e+05, 9.56000000e-01],\n",
       "       [3.79794500e+01, 2.37162200e+01, 6.72130000e+05, 2.86000000e+00],\n",
       "       [3.79794500e+01, 2.37162200e+01, 6.72130000e+05, 8.73333333e-01],\n",
       "       ...,\n",
       "       [3.82444400e+01, 2.17344400e+01, 1.68501000e+05, 1.02000000e+00],\n",
       "       [4.06436100e+01, 2.29308600e+01, 3.53001000e+05, 1.34000000e+00],\n",
       "       [4.06436100e+01, 2.29308600e+01, 3.53001000e+05, 1.16000000e+00]])"
      ]
     },
     "execution_count": 135,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predict_train"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[3.797945e+01, 2.371622e+01, 6.651020e+05, 3.210000e+00],\n",
       "       [3.797945e+01, 2.371622e+01, 6.651020e+05, 8.600000e-01],\n",
       "       [3.796245e+01, 2.368708e+01, 6.651020e+05, 8.200000e-01],\n",
       "       ...,\n",
       "       [3.824444e+01, 2.173444e+01, 1.682540e+05, 8.400000e-01],\n",
       "       [4.064361e+01, 2.293086e+01, 3.530010e+05, 2.180000e+00],\n",
       "       [3.532787e+01, 2.514341e+01, 1.373020e+05, 1.260000e+00]])"
      ]
     },
     "execution_count": 136,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predict_test"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
